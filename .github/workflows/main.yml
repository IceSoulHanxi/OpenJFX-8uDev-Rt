# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the custom branch
on:
  push:
    branches: [ custom ]
  pull_request:
    branches: [ custom ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2016

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
          key: ${{ runner.os }}-chocolatey-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-chocolatey-${{ matrix.os }}-
            ${{ runner.os }}-chocolatey-
      - name: Install Cygwin with chocolatey
        run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO -R C:/tools/cygwin -s http://mirrors.kernel.org/sourceware/cygwin/ -P openssh,bison,flex,g++,gperf,make,makedepend,mercurial,perl,zip,unzip
          echo "::add-path::C:\tools\cygwin\bin"
          echo "::add-path::C:\tools\cygwin\usr\bin"
          #set path=C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin;%path%;
          set path
      - name: Install DirectX SDK with chocolatey
        run: | # http://support.microsoft.com/kb/2728613
          MsiExec.exe /quiet /X{1D8E6291-B0D5-35EC-8441-6616F567A0F7}
          MsiExec.exe /quiet /X{F0C3E5D1-1ADE-321E-8167-68EF0DE699A5}
          choco install --no-progress directx-sdk
        shell: cmd
      - name: Add msbuild to PATH
        uses: ilammy/msvc-dev-cmd@v1
        #with:
          #sdk: 8.1
        #uses: microsoft/setup-msbuild@v1.0.1
      - name: Install OpenJ9 with chocolatey
        run: |
          choco install --no-progress AdoptOpenJDK8openj9 --params="/INSTALLLEVEL=2"
        shell: cmd
      - name: Install Ant with chocolatey
        run: |
          choco install --no-progress ant
        shell: cmd
      - name: Build with Gradle
        run: |
          set INCLUDE="%WindowsSdkDir%Include\um;%WindowsSdkDir%Include\shared;%WindowsSdkDir%Include\winrt;%WindowsSdkDir%Include\;"
          ./gradlew build --stacktrace --debug
        env:
          MSVC_VER: '14.16.27023'
          VSINSTALLDIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\'
          DXSDK_DIR: 'C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)'
          WINSDK_DIR: 'C:\Program Files(x86)\Microsoft Visual Studio 10.0\VC\bin'
