<?xml version="1.0" encoding="UTF-8"?>

<project name="glass-lib-lens" default="default" basedir=".">

    <description>Builds, tests, and runs the project Glass (Lens).</description>

    <property name="jfx.build.needs.gcc.compiler" value="true"/>
    <property name="jfx.build.needs.make.utility" value="true"/>

    <import file="../../build-defs.xml"/>

    <property name="glass.dist.cross.dir" value="${glass.dist.dir}${cross.name.suffix}"/>
    <property name="glass.dist.cross.bin.dir" value="${glass.dist.cross.dir}/bin"/>

    <property name="glass-lib.build.dir" value="./build${cross.name.suffix}"/>
    <property name="glass-lib.dist.dir" value="./dist${cross.name.suffix}"/>
    <property name="jheaders.dir" value="${glass-lib.build.dir}/include"/>

    <property name="glass.classpath" value="../glass/build/classes"/>

    <property name="cross.build.FB" value="false"/>
    <property name="cross.build.EGL.FB" value="false"/>
    <property name="cross.build.directFB" value="false"/>
    <property name="cross.build.headless" value="false"/>

    <condition property="build.headless" value="true" else="false">
        <or>
            <and>
                <isset property="isLinux"/>
                <not>
                    <isset property="cross.platform"/>
                </not>
            </and>
            <and>
                <isset property="cross.platform"/>
                <istrue value="${cross.build.headless}"/>
            </and>
        </or>
    </condition>

    <available file="/usr/include/rfb/rfb.h" type="file"
                       property="rfb.header.present"/>
    <condition property="build.headless.RFB" value="true" else="false">
        <and>
            <isset property="isLinux"/>
            <isset property="rfb.header.present"/>
            <not>
                <isset property="cross.platform"/>
            </not>
        </and>
    </condition>

    <target name="init">
        <mkdir dir="${glass.dist.cross.bin.dir}"/>
        <mkdir dir="${glass-lib.build.dir}"/>
        <mkdir dir="${glass-lib.dist.dir}"/>
    </target>
    
    <target name="default" depends="init">
        <antcall target="jheaders"/>
        <antcall target="native"/>
    </target>
    
    <target name="jheaders">
	<mkdir dir="${jheaders.dir}" />
        <javah destdir="${jheaders.dir}" classpath="${glass.classpath}" force="yes">
            <class name="com.sun.glass.events.DndEvent"/>
            <class name="com.sun.glass.events.KeyEvent"/>
            <class name="com.sun.glass.events.MouseEvent"/>
            <class name="com.sun.glass.events.TouchEvent"/>
            <class name="com.sun.glass.events.ViewEvent"/>
            <class name="com.sun.glass.events.WindowEvent"/>
            <class name="com.sun.glass.ui.Application"/>
            <class name="com.sun.glass.ui.Cursor"/>
            <class name="com.sun.glass.ui.Menu"/>
            <class name="com.sun.glass.ui.MenuBar"/>
            <class name="com.sun.glass.ui.MenuItem"/>
            <class name="com.sun.glass.ui.Pixels"/>
            <class name="com.sun.glass.ui.Robot"/>
            <class name="com.sun.glass.ui.Screen"/>
            <class name="com.sun.glass.ui.Size"/>
            <class name="com.sun.glass.ui.Timer"/>
            <class name="com.sun.glass.ui.View"/>
            <class name="com.sun.glass.ui.View$Capability"/>
            <class name="com.sun.glass.ui.Window"/>
            <class name="com.sun.glass.ui.Window$Level"/>
            <class name="com.sun.glass.ui.lens.LensApplication"/>
            <class name="com.sun.glass.ui.lens.LensCursor"/>
            <class name="com.sun.glass.ui.lens.LensPixels"/>
            <class name="com.sun.glass.ui.lens.LensScreen"/>
            <class name="com.sun.glass.ui.lens.LensView"/>
            <class name="com.sun.glass.ui.lens.LensWindow"/>
            <class name="com.sun.glass.ui.lens.LensRobot"/>
            <class name="com.sun.glass.ui.lens.LensClipboardDelegate"/>
        </javah>
    </target>

    <target name="compile-native-fb" if="${cross.build.FB}">
      <property name="crosstools.gcc" value="gcc"/>
      <property name="cross.glass.lens.fb.cflags" value=""/>
      <property name="cross.glass.lens.fb.ldflags" value=""/>
      <exec executable="make" failonerror="true">
        <arg value="JDK_HOME=${platform.home}"/>
        <arg value="DIST_DIR=${glass-lib.dist.dir}"/>
        <arg value="BUILD_DIR=${glass-lib.build.dir}"/>
        <arg value="CC=${crosstools.gcc}"/>
        <arg value="BUILD_HEADERS=${jheaders.dir}"/>
        <arg value="EXTRA_CFLAGS=${cross.glass.lens.fb.cflags}"/>
        <arg value="EXTRA_LDFLAGS=${cross.glass.lens.fb.ldflags} -ldl"/>
        <arg value="LINK=${crosstools.gcc}"/>
        <arg value="fb"/>
      </exec>
    </target>

    <target name="native-headless-rfb-args" if="${build.headless.RFB}">
      <property name="cross.glass.lens.headless.cflags" value="-DUSE_RFB"/>
      <property name="cross.glass.lens.headless.ldflags" value="-lvncserver -ldl"/>
    </target>

    <target name="native-headless-base-args" unless="${build.headless.RFB}">
      <property name="cross.glass.lens.headless.cflags" value=""/>
      <property name="cross.glass.lens.headless.ldflags" value=""/>
    </target>

    <target name="compile-native-headless" if="${build.headless}"
          depends="native-headless-base-args, native-headless-rfb-args">
      <property name="crosstools.gcc" value="gcc"/>
      <exec executable="make" failonerror="true">
        <arg value="JDK_HOME=${platform.home}"/>
        <arg value="DIST_DIR=${glass-lib.dist.dir}"/>
        <arg value="BUILD_DIR=${glass-lib.build.dir}"/>
        <arg value="CC=${crosstools.gcc}"/>
        <arg value="BUILD_HEADERS=${jheaders.dir}"/>
        <arg value="EXTRA_CFLAGS=${cross.glass.lens.headless.cflags}"/>
        <arg value="EXTRA_LDFLAGS=${cross.glass.lens.headless.ldflags}"/>
        <arg value="LINK=${crosstools.gcc}"/>
        <arg value="headless"/>
      </exec>
    </target>

    <target name="compile-native-dfb" if="${cross.build.directFB}">
      <property name="crosstools.gcc" value="gcc"/>
      <property name="cross.glass.lens.dfb.cflags" value="-I/usr/include/directfb -DUSE_DIRECTFB"/>
      <property name="cross.glass.lens.dfb.ldflags" value="-ldirectfb -ldirect -lfusion -ldl"/>
      <property name="cross.dfb.args" value=""/>
      <exec executable="make" failonerror="true">
        <arg value="JDK_HOME=${platform.home}"/>
        <arg value="DIST_DIR=${glass-lib.dist.dir}"/>
        <arg value="BUILD_DIR=${glass-lib.build.dir}"/>
        <arg value="CC=${crosstools.gcc}"/>
        <arg value="BUILD_HEADERS=${jheaders.dir}"/>
        <arg value="EXTRA_CFLAGS=${cross.glass.lens.dfb.cflags}"/>
        <arg value="EXTRA_LDFLAGS=${cross.glass.lens.dfb.ldflags}"/>
        <arg value="LINK=${crosstools.gcc}"/>
        <arg value="dfb"/>
      </exec>
    </target>

    <target name="compile-native-eglfb" if="${cross.build.EGL.FB}">
      <property name="crosstools.gcc" value="gcc"/>
      <property name="cross.glass.lens.eglfb.cflags" value=""/>
      <property name="cross.glass.lens.eglfb.ldflags" value=""/>
      <exec executable="make" failonerror="true">
        <arg value="JDK_HOME=${platform.home}"/>
        <arg value="DIST_DIR=${glass-lib.dist.dir}"/>
        <arg value="BUILD_DIR=${glass-lib.build.dir}"/>
        <arg value="CC=${crosstools.gcc}"/>
        <arg value="BUILD_HEADERS=${jheaders.dir}"/>
        <arg value="EXTRA_CFLAGS=${cross.glass.lens.eglfb.cflags}"/>
        <arg value="EXTRA_LDFLAGS=${cross.glass.lens.eglfb.ldflags} -ldl"/>
        <arg value="LINK=${crosstools.gcc}"/>
        <arg value="eglfb"/>
      </exec>
    </target>

    <target name="native"
            depends="jheaders,compile-native-fb,compile-native-dfb,
                     compile-native-eglfb,compile-native-headless">
        <copy todir="${glass.dist.cross.bin.dir}">
            <fileset dir="${glass-lib.dist.dir}"/>
        </copy>
    </target>

    <target name="clean">
	<exec executable="make" failonerror="true">
          <arg value="DIST_DIR=${glass-lib.dist.dir}"/>
          <arg value="BUILD_DIR=${glass-lib.build.dir}"/>
	  <arg value="clean"/>
	</exec>
        <delete dir="${jheaders.dir}"/>
        <delete dir="${glass-lib.dist.dir}"/>
        <delete dir="${glass-lib.build.dir}"/>
        <delete dir="${glass.dist.cross.dir}"/>
    </target>
</project>
