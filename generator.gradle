/**
 * This task will generate the new project layout structure for JavaFX. The entire new project
 * structure is generated beneath a new directory simply called "javafx". The idea is that this
 * could become a single repo under which all public JavaFX sources live (rather than where we
 * presently have multiple repositories).
 *
 * Items left to do:
 *  - javafx checkstyle
 *  - media
 *  - building apps
 *  - performance tests
 *  - sqe tests
 *  - unit tests
 *  - manual tests (toys)
 *  - media tests
 *  - all platforms native code, + cross compilation
 *  - How to handle dt *.properties?
 *  - ModenaTest needs to be properly integrated into the tests area
 *  - What about maven builds? We have some .pom right now, but these will need to be redone
 */

defaultTasks = ["generate"]

task createWrapper(type: Wrapper) {
    gradleVersion = '1.4'
}

ext.RTDir = "."
ext.FXDir = "../javafx"
task generate << {
    def excludeFromSource = ["META-INF/**", "**/*.properties", "**/*.stg", "**/*.g", "**/*.css", "**/*.png", "**/*.jpg", "nbproject", "*.iml", "**/*.txt", "**/*.fxml", "**/*.bak", "**/*.orig", "**/*.js"]
    def includeInResources = ["META-INF/**", "**/*.properties", "**/*.stg", "**/*.css", "**/*.png", "**/*.jpg", "**/*.txt", "**/*.fxml", "**/*.js"]
    def excludeFromResources = ["**/doc-files/**/*"]

    // Copy over the new gradle build files, LICENSE, and README
    copy {
        from RTDir
        into FXDir
        include "*.gradle", "LICENSE", "README", "gradle.properties"
        exclude "generator.gradle"
    }

    // Copy over the genVSproperties.bat, used to generate properties required
    // for compilation on Windows.
    copy {
        from "$RTDir/gradle-genVSproperties.bat"
        into FXDir
        rename ("gradle-genVSproperties.bat", "genVSproperties.bat")
    }

    // Copy over the apps
    ["ConferenceScheduleApp", "Modena"].each { app ->
        copy {
            from "$RTDir/apps/experiments/$app/src"
            into "$FXDir/apps/experiments/$app/src/main/java"
            exclude excludeFromSource
            exclude "build.xml"
        }
        copy {
            from "$RTDir/apps/experiments/$app/src"
            into "$FXDir/apps/experiments/$app/src/main/resources"
            include includeInResources
            exclude excludeFromResources
        }
    }

    // Copy over Ensemble8. Some special care taken for the generated stuff.
    copy {
        from "$RTDir/apps/samples/Ensemble8/src"
        into "$FXDir/apps/samples/Ensemble8/src/main/java"
        exclude excludeFromSource
        exclude "build.xml"
        exclude "generated/ensemble/search/index/"
    }
    copy {
        from "$RTDir/apps/samples/Ensemble8/src"
        into "$FXDir/apps/samples/Ensemble8/src/main/resources"
        include includeInResources
        exclude excludeFromResources
        include "generated/ensemble/search/index/"
    }

    // Create the build-tools project
    copy {
        from "${RTDir}/javafx-beans/src"
        into "${FXDir}/build-tools/src/main/java"
        include "com/sun/javafx/beans/annotations/**",
                "com/sun/javafx/collections/annotations/**"
    }
    copy {
        from "${RTDir}/javafx-annotation-processor/src",
             "${RTDir}/decora-compiler/src"
        into "${FXDir}/build-tools/src/main/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-annotation-processor/src",
             "${RTDir}/decora-compiler/src"
        into "${FXDir}/build-tools/src/main/resources"
        include includeInResources
        exclude excludeFromResources
        exclude "**/META-INF/**/*"
    }
    copy {
        from "${RTDir}/decora-compiler/src/com/sun/scenario/effect/compiler/JSL.g"
        into "${FXDir}/build-tools/src/main/antlr"
    }
    copy {
        from "${RTDir}/decora-compiler/test"
        into "${FXDir}/build-tools/src/test/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/decora-compiler/test"
        into "${FXDir}/build-tools/src/test/resources"
        include includeInResources
        exclude excludeFromResources
    }

    // Create the base module
    copy {
        from "${RTDir}/javafx-beans/src",
             "${RTDir}/javafx-util-converter/src",
             "${RTDir}/javafx-anim/src",
             "${RTDir}/javafx-common/src",
             "${RTDir}/javafx-logging/src"
        into "${FXDir}/modules/base/src/main/java"
        exclude "com/sun/javafx/beans/annotations/**",
                "com/sun/javafx/collections/annotations/**"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-beans/src",
             "${RTDir}/javafx-util-converter/src",
             "${RTDir}/javafx-anim/src",
             "${RTDir}/javafx-common/src",
             "${RTDir}/javafx-logging/src"
        into "${FXDir}/modules/base/src/main/resources"
        include includeInResources
        exclude excludeFromResources
    }
    copy {
        from "${RTDir}/javafx-anim/src"
        into "${FXDir}/modules/base/src/main/docs"
        include "**/doc-files/**/*"
    }
    copy {
        from "${RTDir}/javafx-common/build-tools"
        into "${FXDir}/modules/base/src/main/version-info"
    }
    copy {
        from "${RTDir}/javafx-beans/test",
             "${RTDir}/javafx-util-converter/test",
             "${RTDir}/javafx-anim/test/unit", // TODO also has functional tests
             "${RTDir}/javafx-common/test/unit"
        into "${FXDir}/modules/base/src/test/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-beans/test",
             "${RTDir}/javafx-util-converter/test",
             "${RTDir}/javafx-anim/test/unit", // TODO also has functional tests
             "${RTDir}/javafx-common/test/unit"
        into "${FXDir}/modules/base/src/test/resources"
        include includeInResources
        exclude excludeFromResources
    }

    // Create the graphics module
    copy {
        from "${RTDir}/decora-d3d/src",
             "${RTDir}/decora-es2/src",
             "${RTDir}/decora-jsw/src",
             "${RTDir}/decora-prism/src",
             "${RTDir}/decora-prism-ps/src",
             "${RTDir}/decora-prism-sw/src",
             "${RTDir}/decora-runtime/src",
             "${RTDir}/decora-sse/src",
             "${RTDir}/javafx-ui-common/src",
             "${RTDir}/javafx-concurrent/src",
             "${RTDir}/javafx-geom/src",
             "${RTDir}/javafx-geom/cagsrc.double",
             "${RTDir}/javafx-sg-common/src",
             "${RTDir}/javafx-sg-prism/src",
             "${RTDir}/pisces/src",
             "${RTDir}/glass/glass/src",
             "${RTDir}/javafx-ui-quantum/src",
             "${RTDir}/prism-common/src",
             "${RTDir}/prism-j2d/src",
             "${RTDir}/prism-null/src",
             "${RTDir}/prism-ps/src",
             "${RTDir}/prism-sw/src",
             "${RTDir}/prism-util/src"
        into "${FXDir}/modules/graphics/src/main/java"
        exclude "com/sun/scenario/effect/compiler/JSL.g"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/decora-d3d/src",
             "${RTDir}/decora-es2/src",
             "${RTDir}/decora-jsw/src",
             "${RTDir}/decora-prism/src",
             "${RTDir}/decora-prism-ps/src",
             "${RTDir}/decora-prism-sw/src",
             "${RTDir}/decora-runtime/src",
             "${RTDir}/decora-sse/src",
             "${RTDir}/javafx-ui-common/src",
             "${RTDir}/javafx-concurrent/src",
             "${RTDir}/javafx-geom/src",
             "${RTDir}/javafx-geom/cagsrc.double",
             "${RTDir}/javafx-sg-common/src",
             "${RTDir}/javafx-sg-prism/src",
             "${RTDir}/pisces/src",
             "${RTDir}/glass/glass/src",
             "${RTDir}/javafx-ui-quantum/src",
             "${RTDir}/prism-common/src",
             "${RTDir}/prism-j2d/src",
             "${RTDir}/prism-null/src",
             "${RTDir}/prism-ps/src",
             "${RTDir}/prism-sw/src",
             "${RTDir}/prism-util/src"
        into "${FXDir}/modules/graphics/src/main/resources"
        include includeInResources
        exclude excludeFromResources
    }
    copy {
        from "${RTDir}/javafx-ui-common/src"
        into "${FXDir}/modules/graphics/src/main/docs"
        include "**/doc-files/**/*"
    }
    copy {
        from "${RTDir}/javafx-concurrent/test",
             "${RTDir}/javafx-geom/test",
             "${RTDir}/javafx-sg-common/test",
             "${RTDir}/javafx-sg-prism/test",
             "${RTDir}/javafx-ui-quantum/test"
        into "${FXDir}/modules/graphics/src/test/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-concurrent/test",
             "${RTDir}/javafx-geom/test",
             "${RTDir}/javafx-sg-common/test",
             "${RTDir}/javafx-sg-prism/test",
             "${RTDir}/javafx-ui-quantum/test"
        into "${FXDir}/modules/graphics/src/test/resources"
        include includeInResources
        exclude excludeFromResources
    }
    // Because we have tests that need to be run with StubToolkit vs. Quantum,
    // and others that need Quantum, we have to split them apart
    copy {
        from "${RTDir}/javafx-ui-common/test/unit",
             "${RTDir}/test-stub-toolkit/src"
        into "${FXDir}/modules/graphics/src/stub/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-ui-common/test/unit",
             "${RTDir}/test-stub-toolkit/src"
        into "${FXDir}/modules/graphics/src/stub/resources"
        include includeInResources
        exclude excludeFromResources
    }

    copy {
        from "${RTDir}/javafx-beans-dt/src"
        into "${FXDir}/modules/designTime/src/main/java"
    }
    copy {
        from "${RTDir}/javafx-designtime/src"
        into "${FXDir}/modules/designTime/src/main/java"
        include "javafx/scene/ParentDesignInfo.java", "javafx/scene/layout/**", "com/**"
    }

    copy {
        from "${RTDir}/prism-ps/jsl",
             "${RTDir}/prism-ps/shadergen"
        into "${FXDir}/modules/graphics/prism-jsl/src/main/java"
        exclude "nbproject", "*.iml", "*.stg"
    }

    copy {
        from "${RTDir}/prism-ps/shadergen"
        into "${FXDir}/modules/graphics/prism-jsl/src/main/resources"
        include "*.stg"
    }

    ["glass-lib-gtk", "glass-lib-ios", "glass-lib-lens", "glass-lib-macosx", "glass-lib-windows"].each { dir ->
        def name = dir.substring(dir.lastIndexOf("-") + 1);
        if (name == "windows") name = "win"
        if (name == "macosx") name = "mac"
        copy {
            from "${RTDir}/glass/${dir}/src"
            into "${FXDir}/modules/graphics/src/main/native-glass/${name}"
        }
    }

    copy {
        from "${RTDir}/prism-common-native/src"
        into "${FXDir}/modules/graphics/src/main/native-prism"
    }

    copy {
        from "${RTDir}/prism-sw-native/include"
        from "${RTDir}/prism-sw-native/src"
        into "${FXDir}/modules/graphics/src/main/native-prism-sw"
    }

    copy {
        from "${RTDir}/decora-sse-native"
        into "${FXDir}/modules/graphics/src/main/native-decora"
        include "*.cc", "*.h"
    }

    copy {
        from "${RTDir}/decora-runtime/jsl",
             "${RTDir}/decora-runtime/generator"
        into "${FXDir}/modules/graphics/effects-jsl/src/main/java"
    }

    // Create the controls module
    copy {
        from "${RTDir}/javafx-ui-charts/src",
             "${RTDir}/javafx-ui-controls/src"
        into "${FXDir}/modules/controls/src/main/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-ui-charts/src",
             "${RTDir}/javafx-ui-controls/src"
        into "${FXDir}/modules/controls/src/main/resources"
        include includeInResources
        exclude excludeFromResources
    }
    copy {
        from "${RTDir}/javafx-designtime/src"
        into "${FXDir}/modules/controls/src/main/dt"
        include "javafx/scene/control/**"
    }
    copy {
        from "${RTDir}/javafx-ui-charts/test",
             "${RTDir}/javafx-ui-controls/test"
        into "${FXDir}/modules/controls/src/test/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-ui-charts/test",
             "${RTDir}/javafx-ui-controls/test"
        into "${FXDir}/modules/controls/src/test/resources"
        include includeInResources
        exclude excludeFromResources
    }

    // Create the web module

    // Create the swing module
    copy {
        from "${RTDir}/javafx-embed-swing/src"
        into "${FXDir}/modules/swing/src/main/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-embed-swing/src"
        into "${FXDir}/modules/swing/src/main/java"
        include includeInResources
        exclude excludeFromResources
    }

    // Create the swt module
    copy {
        from "${RTDir}/javafx-embed-swt/src"
        into "${FXDir}/modules/swt/src/main/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-embed-swt/src"
        into "${FXDir}/modules/swt/src/main/java"
        include includeInResources
        exclude excludeFromResources
    }

    // Create the fxml module
    copy {
        from "${RTDir}/javafx-fxml/src"
        into "${FXDir}/modules/fxml/src/main/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-fxml/src"
        into "${FXDir}/modules/fxml/src/main/resources"
        include includeInResources
        exclude excludeFromResources
    }
    copy {
        from "${RTDir}/javafx-fxml/src"
        into "${FXDir}/modules/fxml/src/main/docs"
        include "**/doc-files/**/*"
    }

    copy {
        from "${RTDir}/javafx-fxml/test"
        into "${FXDir}/modules/fxml/src/test/java"
        exclude excludeFromSource
    }
    copy {
        from "${RTDir}/javafx-fxml/test"
        into "${FXDir}/modules/fxml/src/test/resources"
        include includeInResources
        exclude excludeFromResources
    }

    // Create the deployment code
    copy {
        from "$RTDir/deploy/javafx-deploy/src/js"
        into "$FXDir/modules/fxpackager/src/main/resources/resources/web-files"
    }

    copy {
        from "$RTDir/deploy/lib"
        into "$FXDir/modules/fxpackager/src/main/resources/resources/web-files"
        exclude "java-coffee-cup-23x20.png", "splash.gif"
    }

    copy {
        from "$RTDir/deploy/javafx-launcher/src"
        into "$FXDir/modules/fxpackager/src/main/java"
    }

    copy {
        from "$RTDir/deploy/packager/src"
        into "$FXDir/modules/fxpackager/src/main/java"
        exclude excludeFromSource
        exclude "**/*antlib.xml",
                "**/*.control", "**/*.copyright", "**/*.desktop", "**/*.postinst", "**/*.postrm", "**/*.spec",
                "**/*.scpt", "**/*.icns", "**/*.template", "**/*.plist",
                "**/*.bmp", "**/*.ico", "**/*.iss", "**/*.wxs"
    }

    copy {
        from "$RTDir/deploy/packager/src", "$RTDir/deploy/packager/scripts"
        into "$FXDir/modules/fxpackager/src/main/resources"
        include includeInResources
        include "**/*antlib.xml",
                "**/*.control", "**/*.copyright", "**/*.desktop", "**/*.postinst", "**/*.postrm", "**/*.spec",
                "**/*.scpt", "**/*.icns", "**/*.template", "**/*.plist",
                "**/*.bmp", "**/*.ico", "**/*.iss", "**/*.wxs"
        exclude excludeFromResources
    }

    copy {
        from "$RTDir/deploy/packager/native/linux"
        into "$FXDir/modules/fxpackager/src/main/native/launcher/linux"
    }

    copy {
        from "$RTDir/deploy/packager/native/macosx"
        into "$FXDir/modules/fxpackager/src/main/native/launcher/mac"
    }

    copy {
        from "$RTDir/deploy/packager/native/windows"
        into "$FXDir/modules/fxpackager/src/main/native/launcher/win"
        rename "iconswap.cpp", "IconSwap.cpp"
        include "WinLauncher.cpp", "iconswap.cpp"
    }

    copy {
        from "$RTDir/deploy/packager/scripts"
        into "$FXDir/modules/fxpackager/src/main/native/javafxpackager/shell"
    }

    copy {
        from "$RTDir/deploy/packager/winlauncher"
        into "$FXDir/modules/fxpackager/src/main/native/javafxpackager/win"
        include "javafxpackager.manifest", "javafxpackager.rc", "main.cpp"
        rename "main.cpp", "javafxpackager.cpp"
    }

    copy {
        from "$RTDir/deploy/packager/test"
        into "$FXDir/modules/fxpackager/test/main/java"
    }

    copy {
        from "$RTDir/deploy/man"
        into "$FXDir/modules/fxpackager/src/main/man"
        exclude "build.xml", "**/ja/**"
    }

    copy {
        from "$RTDir/deploy/man/ja"
        into "$FXDir/modules/fxpackager/src/main/man/ja_JP.UTF-8"
    }

    // Find every empty directory and nuke it
    def empty = []
    fileTree("$FXDir").visit {
        if (it.directory && it.file.list().length == 0) empty.add(it.file);
    }
    empty.each { it.delete() }
}
